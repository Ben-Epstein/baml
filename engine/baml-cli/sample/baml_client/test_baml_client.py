# This file is generated by the BAML compiler.
# Do not edit this file directly.
# Instead, edit the BAML files and recompile.

# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off

from .__do_not_import.generated_baml_client import baml
from .baml_types import Attendee, Conversation, IClassifyIntent, IExtractMeetingRequestInfo, Intent, MeetingRequest, Message, UserType
from baml_lib._impl.deserializer import Deserializer
from json5 import loads # type: ignore


@baml.ExtractMeetingRequestInfo.test
async def test_noisy_crimson(ExtractMeetingRequestInfoImpl: IExtractMeetingRequestInfo):
    case = loads("""
{
    "messages": [
        {
            "sender": "User",
            "content": "Hey! its urgent that we speak to john@corp.com"
        },
        {
            "sender": "User",
            "content": "Its about the call with Acme Org later today"
        },
        {
            "sender": "AI",
            "content": "Sure, when would you like to chat with John?"
        },
        {
            "sender": "User",
            "content": "3"
        }
    ]
}
""")
    deserializer_convo = Deserializer[Conversation](Conversation)
    convo = deserializer_convo.from_string(case["convo"])
    deserializer_now = Deserializer[str](str)
    now = deserializer_now.from_string(case["now"])
    await ExtractMeetingRequestInfoImpl(
        convo=convo,
        now=now
    )


@baml.ClassifyIntent.test
async def test_witty_amethyst(ClassifyIntentImpl: IClassifyIntent):
    case = loads("""
Can we meet later today?
""")
    deserializer_query = Deserializer[str](str)
    query = deserializer_query.from_string(case["query"])
    await ClassifyIntentImpl(
        query=query
    )


