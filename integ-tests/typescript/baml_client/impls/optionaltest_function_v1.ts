// This file is auto-generated. Do not edit this file manually.
//
// Disable formatting for this file to avoid linting errors.
// tslint:disable
// @ts-nocheck
/* eslint-disable */


import { Claude } from '../client';
import { OptionalTest_Function } from '../function';
import { schema } from '../json_schema';
import { LLMResponseStream } from '@boundaryml/baml-core';
import { Deserializer } from '@boundaryml/baml-core/deserializer/deserializer';


const prompt_template = [
  {
    role: "user",
    content: `Return a JSON blob with this schema: 
({
  "omega_1": {
    "omega_a": string,
    "omega_b": int
  } | null,
  "omega_2": string | null,
  "omega_3": ("OptionalTest_CategoryType as string" | null)[]
} | null)[]

Here's a list of values you can use for
OptionalTest_CategoryType
---
Aleph
Beta
Gamma

JSON:`
  }
];


const deserializer = new Deserializer<OptionalTest_ReturnType | null[]>(schema, {
  $ref: '#/definitions/OptionalTest_Function_output'
});

const v1 = async (
  arg: string
): Promise<OptionalTest_ReturnType | null[]> => {
  
  const result = await Claude.run_chat_template(
    prompt_template,
    [],
    {
    }
  );

  return deserializer.coerce(result.generated);
};

const v1_stream = (
  arg: string
): LLMResponseStream<OptionalTest_ReturnType | null[]> => {
  
  const stream = Claude.run_chat_template_stream(
    prompt_template,
    [],
    {
    }
  );

  return new LLMResponseStream<OptionalTest_ReturnType | null[]>(
    stream,
    (partial: string) => deserializer.coerce(partial),
    (final: string) => deserializer.coerce(final),
  );
};

OptionalTest_Function.registerImpl('v1', v1, v1_stream);


